$shapeFill: black;
$shapeStroke: black;
$shapeFillTextInverted: hsla(0, 0%, 60%, 1);

.flowchart {
  font-size: 1rem; /* baseline */
  font-family: "Nunito Sans", sans-serif;

  @mixin supportsGrid {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(9, min-content);
    grid-template-areas:
      ".        .         start       start       .           .      "
      "pt1      pt1       pt1         .           .           .      "
      "d1       d1        pt4         pt4         about       about  "
      "d1       d1        pt4         pt4         contact     contact"
      "pt3      pt3       .           .           .           .      "
      "d2       d2        pt5         pt5         port        port   "
      "d2       d2        pt5         pt5         stack       stack  "
      "pt2      pt2       pt2         .           .           .      "
      ".        .         end         end         .           .      ";
  }
     
  padding: 0;
  /* 
  @mixin atSmall {
    padding: 35vmax 10vmax 50vmax 10vmax;
  }
  
  @mixin atMedium {
    padding: 32vmax 20vmax 32vmax 20vmax;
  }

  @mixin atLarge {
    padding: 25vmax 25vmax 25vmax 25vmax;
  }

  @mixin atXLarge {
    padding: 23vmax 30vmax 23vmax 30vmax;
  }
  
  @mixin atULarge {
    padding: 20vmax 35vmax 20vmax 35vmax;
  }
  */
  
  & .shape--button .shape__rect--inverted {
    transition: all .6s;

    &:hover {
      cursor: pointer;
      fill: hsla(0, 0%, 0%, 0);
      stroke: hsla(128, 100%, 0%, 1);
    }
  }

  /* rectangles */
  &__start {
    @mixin supportsGrid {
      grid-area: start;
    }
  }

  &__end {
    @mixin supportsGrid {
      grid-area: end;
    }
  }

  /* rectangles / buttons */
  &__btn {
    height: 0;

    &--about {
      @mixin supportsGrid {
        grid-area: about;
      }
    }
    &--contact {
      @mixin supportsGrid {
        grid-area: contact;
      }
    }
    &--portfolio {
      @mixin supportsGrid {
        grid-area: port;
      }
    }
    &--stack {
      @mixin supportsGrid {
        grid-area: stack;
      }
    }
  }

  /* rectangles / diamonds */
  &__d1 {
    @mixin supportsGrid {
      grid-area: d1;
    }
  }

  &__d2 {
    @mixin supportsGrid {
      grid-area: d2;
    }
  }

  /* lines */
  &__pt1 {
    @mixin supportsGrid {
      grid-area: pt1;
    }
  }

  &__pt2 {
    @mixin supportsGrid {
      grid-area: pt2;
    }
  }

  &__pt3 {
    @mixin supportsGrid {
      grid-area: pt3;
    }
  }

  &__pt4 {
    @mixin supportsGrid {
      grid-area: pt4;
    }
  }

  &__pt5 {
    @mixin supportsGrid {
      grid-area: pt5;
    }
  }
}

/* svg / shapes */
.shape {
  display: block;
  overflow: visible;

  &--center {
    margin: 0 auto;
  }

  &--pull-up {
    transform: translateY(-45%);
  }
  &--pull-down {
    transform: translateY(65%);
  }

  &--medium {
    width: 75%;
  }

  &__rect {
    stroke: $shapeStroke;
    stroke-width: 4;
    fill: none;

    &--inverted {
      fill: $shapeFill;
      stroke: $shapeStroke;
    }
  }

  &__line {
    width: 100%;
    height: 100%;
    fill: none;
    stroke: $shapeStroke;
    stroke-width: 4;

    &--no-stroke {
      stroke: none !important;
    }

    &--thinnest {
      stroke-width: 1;
    }

    &--thin {
      stroke-width: 2;
    }

    &--dashed {
      fill-rule: evenodd;
      clip-rule: evenodd;
      stroke-width: 3;
      stroke-dasharray: 3;
    }

    &--filled {
      fill: $shapeFill;
      stroke: none;
    }
  }

  &__text {
    fill: $shapeFill;
    font-weight: 600;

    &--inverted {
      fill: $shapeFillTextInverted;
    }

    &--smaller {
      font-size: 1.65em;
    }

    &--normal {
      font-size: 1.8em;
    }

    &--capitalize {
      text-transform: capitalize;
    }

    &--uppercase {
      text-transform: uppercase;
    }
  }
}
